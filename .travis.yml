language: android
dist: focal

# Only build for the master branch (customize as needed)
branches:
  only:
    - main

# Cache Gradle and ccache directories
cache:
  directories:
    - $HOME/.ccache
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/android-sdk/

# Set environment variables
env:
  global:
    - MAKEFLAGS="-j$(nproc)"
    - USE_CCACHE=1
    - CCACHE_DIR=$HOME/.ccache
    - DEVICE_CODENAME=lancelot # Your device codename (e.g. "whyred")

android:
  components:
    - tools
    - platform-tools
    - build-tools-34.0.0
    - android-34
  licenses:
    - 'android-sdk-license-.+'

before_install:
  # Install required packages
  - sudo apt-get update
  - sudo apt-get install -y openjdk-11-jdk git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc ccache libssl-dev ninja-build python3 python-is-python3 jq

before_script:
  # Keep build alive to prevent timeout
  - while true; do echo "Keeping Travis alive..."; sleep 540; done &
  
  # Set up build directory
  - export BUILD_DIR="$HOME/rom"
  - mkdir -p $BUILD_DIR
  - cd $BUILD_DIR

  # Silent cloning and syncing
  - git clone https://github.com/crdroidandroid/android.git -b 14.0 crdroid > /dev/null 2>&1
  - cd crdroid
  - repo init -u https://github.com/crdroidandroid/android.git -b 14.0 > /dev/null 2>&1
  - repo sync --force-sync --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc) > /dev/null 2>&1

# Build ROM with no log output
script:
  - source build/envsetup.sh
  - lunch lineage_$DEVICE_CODENAME-userdebug
  - make bacon > /dev/null 2>&1

# After success, the deploy section will automatically handle the file upload
deploy:
  provider: releases
  token: $GITHUB_TOKEN  # The GitHub token should be stored in Travis CI environment variables
  file_glob: true
  file: 
    - "$BUILD_DIR/crdroid/out/target/product/$DEVICE_CODENAME/*.zip"
    - "$BUILD_DIR/crdroid/out/target/product/$DEVICE_CODENAME/recovery.img"
  skip_cleanup: true
  on:
    tags: false
    branch: main  # Deploy on the master branch

after_failure:
  - echo "Build failed."

notifications:
  email:
    recipients:
      - your_email@example.com
    on_success: change
    on_failure: always
